# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-07-20 13:38
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('model_model', '0002_inceptionauditdetail_status_code'),
    ]

    operations = [
        migrations.CreateModel(
            name='SlowQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checksum', models.BigIntegerField(unique=True)),
                ('fingerprint', models.TextField()),
                ('sample', models.TextField()),
                ('first_seen', models.DateTimeField(default=None, null=True)),
                ('last_seen', models.DateTimeField(default=None, null=True)),
                ('reviewed_by', models.CharField(default=None, max_length=20, null=True)),
                ('reviewed_on', models.DateTimeField(default=None, null=True)),
                ('comments', models.TextField()),
                ('reviewed_status', models.CharField(default=None, max_length=24, null=True)),
            ],
            options={
                'db_table': 'mysql_slow_query_review',
            },
        ),
        migrations.CreateModel(
            name='SlowQueryHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname_max', models.CharField(max_length=64)),
                ('db_max', models.CharField(default=None, max_length=64, null=True)),
                ('checksum', models.BigIntegerField(db_index=True)),
                ('sample', models.TextField()),
                ('ts_min', models.DateTimeField(db_index=True, default='1970-01-01 01:01:01')),
                ('ts_max', models.DateTimeField(default='1970-01-01 01:01:01')),
                ('ts_cnt', models.FloatField(default=None, null=True)),
                ('query_time_sum', models.FloatField(default=None, null=True)),
                ('query_time_min', models.FloatField(default=None, null=True)),
                ('query_time_max', models.FloatField(default=None, null=True)),
                ('query_time_pct_95', models.FloatField(default=None, null=True)),
                ('query_time_stddev', models.FloatField(default=None, null=True)),
                ('query_time_median', models.FloatField(default=None, null=True)),
                ('lock_time_sum', models.FloatField(default=None, null=True)),
                ('lock_time_min', models.FloatField(default=None, null=True)),
                ('lock_time_max', models.FloatField(default=None, null=True)),
                ('lock_time_pct_95', models.FloatField(default=None, null=True)),
                ('lock_time_stddev', models.FloatField(default=None, null=True)),
                ('lock_time_median', models.FloatField(default=None, null=True)),
                ('rows_sent_sum', models.FloatField(default=None, null=True)),
                ('rows_sent_min', models.FloatField(default=None, null=True)),
                ('rows_sent_max', models.FloatField(default=None, null=True)),
                ('rows_sent_pct_95', models.FloatField(default=None, null=True)),
                ('rows_sent_stddev', models.FloatField(default=None, null=True)),
                ('rows_sent_median', models.FloatField(default=None, null=True)),
                ('rows_examined_sum', models.FloatField(default=None, null=True)),
                ('rows_examined_min', models.FloatField(default=None, null=True)),
                ('rows_examined_max', models.FloatField(default=None, null=True)),
                ('rows_examined_pct_95', models.FloatField(default=None, null=True)),
                ('rows_examined_stddev', models.FloatField(default=None, null=True)),
                ('rows_examined_median', models.FloatField(default=None, null=True)),
                ('rows_affected_sum', models.FloatField(default=None, null=True)),
                ('rows_affected_min', models.FloatField(default=None, null=True)),
                ('rows_affected_max', models.FloatField(default=None, null=True)),
                ('rows_affected_pct_95', models.FloatField(default=None, null=True)),
                ('rows_affected_stddev', models.FloatField(default=None, null=True)),
                ('rows_affected_median', models.FloatField(default=None, null=True)),
                ('rows_read_sum', models.FloatField(default=None, null=True)),
                ('rows_read_min', models.FloatField(default=None, null=True)),
                ('rows_read_max', models.FloatField(default=None, null=True)),
                ('rows_read_pct_95', models.FloatField(default=None, null=True)),
                ('rows_read_stddev', models.FloatField(default=None, null=True)),
                ('rows_read_median', models.FloatField(default=None, null=True)),
                ('merge_passes_sum', models.FloatField(default=None, null=True)),
                ('merge_passes_min', models.FloatField(default=None, null=True)),
                ('merge_passes_max', models.FloatField(default=None, null=True)),
                ('merge_passes_pct_95', models.FloatField(default=None, null=True)),
                ('merge_passes_stddev', models.FloatField(default=None, null=True)),
                ('merge_passes_median', models.FloatField(default=None, null=True)),
                ('innodb_io_r_ops_min', models.FloatField(default=None, null=True)),
                ('innodb_io_r_ops_max', models.FloatField(default=None, null=True)),
                ('innodb_io_r_ops_pct_95', models.FloatField(default=None, null=True)),
                ('innodb_io_r_bytes_pct_95', models.FloatField(default=None, null=True)),
                ('innodb_io_r_bytes_stddev', models.FloatField(default=None, null=True)),
                ('innodb_io_r_bytes_median', models.FloatField(default=None, null=True)),
                ('innodb_io_r_wait_min', models.FloatField(default=None, null=True)),
                ('innodb_io_r_wait_max', models.FloatField(default=None, null=True)),
                ('innodb_io_r_wait_pct_95', models.FloatField(default=None, null=True)),
                ('innodb_io_r_ops_stddev', models.FloatField(default=None, null=True)),
                ('innodb_io_r_ops_median', models.FloatField(default=None, null=True)),
                ('innodb_io_r_bytes_min', models.FloatField(default=None, null=True)),
                ('innodb_io_r_bytes_max', models.FloatField(default=None, null=True)),
                ('innodb_io_r_wait_stddev', models.FloatField(default=None, null=True)),
                ('innodb_io_r_wait_median', models.FloatField(default=None, null=True)),
                ('innodb_rec_lock_wait_min', models.FloatField(default=None, null=True)),
                ('innodb_rec_lock_wait_max', models.FloatField(default=None, null=True)),
                ('innodb_rec_lock_wait_pct_95', models.FloatField(default=None, null=True)),
                ('innodb_rec_lock_wait_stddev', models.FloatField(default=None, null=True)),
                ('innodb_rec_lock_wait_median', models.FloatField(default=None, null=True)),
                ('innodb_queue_wait_min', models.FloatField(default=None, null=True)),
                ('innodb_queue_wait_max', models.FloatField(default=None, null=True)),
                ('innodb_queue_wait_pct_95', models.FloatField(default=None, null=True)),
                ('innodb_queue_wait_stddev', models.FloatField(default=None, null=True)),
                ('innodb_queue_wait_median', models.FloatField(default=None, null=True)),
                ('innodb_pages_distinct_min', models.FloatField(default=None, null=True)),
                ('innodb_pages_distinct_max', models.FloatField(default=None, null=True)),
                ('innodb_pages_distinct_pct_95', models.FloatField(default=None, null=True)),
                ('innodb_pages_distinct_stddev', models.FloatField(default=None, null=True)),
                ('innodb_pages_distinct_median', models.FloatField(default=None, null=True)),
                ('qc_hit_cnt', models.FloatField(default=None, null=True)),
                ('qc_hit_sum', models.FloatField(default=None, null=True)),
                ('full_scan_cnt', models.FloatField(default=None, null=True)),
                ('full_scan_sum', models.FloatField(default=None, null=True)),
                ('full_join_cnt', models.FloatField(default=None, null=True)),
                ('full_join_sum', models.FloatField(default=None, null=True)),
                ('tmp_table_cnt', models.FloatField(default=None, null=True)),
                ('tmp_table_sum', models.FloatField(default=None, null=True)),
                ('filesort_cnt', models.FloatField(default=None, null=True)),
                ('filesort_sum', models.FloatField(default=None, null=True)),
                ('tmp_table_on_disk_cnt', models.FloatField(default=None, null=True)),
                ('tmp_table_on_disk_sum', models.FloatField(default=None, null=True)),
                ('filesort_on_disk_cnt', models.FloatField(default=None, null=True)),
                ('filesort_on_disk_sum', models.FloatField(default=None, null=True)),
                ('bytes_sum', models.FloatField(default=None, null=True)),
                ('bytes_min', models.FloatField(default=None, null=True)),
                ('bytes_max', models.FloatField(default=None, null=True)),
                ('bytes_pct_95', models.FloatField(default=None, null=True)),
                ('bytes_stddev', models.FloatField(default=None, null=True)),
                ('bytes_median', models.FloatField(default=None, null=True)),
            ],
            options={
                'db_table': 'mysql_slow_query_review_history',
            },
        ),
        migrations.RenameField(
            model_name='metadatacolumns',
            old_name='PRIVILEGES',
            new_name='privileges',
        ),
        migrations.AlterUniqueTogether(
            name='slowqueryhistory',
            unique_together=set([('hostname_max', 'checksum', 'ts_min', 'ts_max')]),
        ),
    ]
