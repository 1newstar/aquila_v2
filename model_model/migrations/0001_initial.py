# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-22 22:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'db_table': 'app_type',
            },
        ),
        migrations.CreateModel(
            name='GetMetaDataError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip', models.CharField(max_length=50)),
                ('error_msg', models.CharField(max_length=1000)),
                ('r_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'get_metadata_error',
            },
        ),
        migrations.CreateModel(
            name='HostAPPAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_user', models.CharField(max_length=20)),
                ('app_pass', models.CharField(max_length=30)),
                ('app_port', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'host_app_account',
            },
        ),
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_group_name', models.CharField(max_length=50, unique=True)),
                ('host_group_jd', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'host_groups',
            },
        ),
        migrations.CreateModel(
            name='HostInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip', models.CharField(max_length=45, unique=True)),
                ('host_user', models.CharField(max_length=20)),
                ('host_pass', models.CharField(max_length=30)),
                ('host_port', models.SmallIntegerField()),
                ('app_type', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.AppType')),
                ('host_group', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.HostGroup')),
            ],
            options={
                'db_table': 'hosts_info',
            },
        ),
        migrations.CreateModel(
            name='InceAuditSQLContent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sql_content', models.TextField()),
            ],
            options={
                'db_table': 'ince_audit_sql_content',
            },
        ),
        migrations.CreateModel(
            name='InceptionAuditDetail',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('flag', models.SmallIntegerField(default=1)),
                ('sql_sid', models.SmallIntegerField()),
                ('status', models.CharField(max_length=30)),
                ('error_msg', models.TextField()),
                ('sql_content', models.TextField()),
                ('aff_row', models.IntegerField()),
                ('rollback_id', models.CharField(max_length=50)),
                ('backup_dbname', models.CharField(max_length=100)),
                ('execute_time', models.IntegerField()),
                ('sql_hash', models.CharField(default='----', max_length=50)),
                ('r_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'dbms_ince_audit_detail',
            },
        ),
        migrations.CreateModel(
            name='InceptionWorkOrderInfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(default='test', max_length=100)),
                ('work_title', models.CharField(max_length=60)),
                ('work_order_id', models.BigIntegerField(unique=True)),
                ('work_user', models.CharField(max_length=50)),
                ('db_host', models.CharField(max_length=45)),
                ('master_host', models.CharField(default='----', max_length=45)),
                ('db_name', models.CharField(default='test_db', max_length=50)),
                ('end_time', models.DateTimeField(default='1980-01-01 01:01:01')),
                ('review_time', models.DateTimeField(default='1980-01-01 01:01:01')),
                ('review_status', models.SmallIntegerField(default=10)),
                ('work_status', models.SmallIntegerField(default=10)),
                ('work_run_time', models.DateTimeField(default='1980-01-01 01:01:01')),
                ('work_cron_time', models.DateTimeField(default='1980-01-01 01:01:01')),
                ('comm', models.CharField(default='----', max_length=500)),
                ('review_comm', models.CharField(default='----', max_length=500)),
                ('r_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'ince_work_order_info',
            },
        ),
        migrations.CreateModel(
            name='MetaDataColumns',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip', models.CharField(max_length=50)),
                ('table_schema', models.CharField(max_length=64)),
                ('table_name', models.CharField(max_length=64)),
                ('column_name', models.CharField(max_length=64)),
                ('column_type', models.CharField(max_length=64)),
                ('collation_name', models.CharField(max_length=32)),
                ('is_nullable', models.CharField(max_length=3)),
                ('column_key', models.CharField(max_length=3)),
                ('column_default', models.CharField(max_length=150)),
                ('extra', models.CharField(max_length=30)),
                ('PRIVILEGES', models.CharField(max_length=80)),
                ('column_comment', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'mysql_metadata_columns',
            },
        ),
        migrations.CreateModel(
            name='MetaDataIndexs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip', models.CharField(max_length=50)),
                ('table_schema', models.CharField(max_length=64)),
                ('table_name', models.CharField(max_length=64)),
                ('column_name', models.CharField(max_length=64)),
                ('non_unique', models.SmallIntegerField()),
                ('index_name', models.CharField(max_length=64)),
                ('seq_in_index', models.SmallIntegerField()),
                ('cardinality', models.BigIntegerField(default=0)),
                ('nullable', models.CharField(max_length=3)),
                ('index_type', models.CharField(max_length=16)),
                ('index_comment', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'mysql_metadata_indexs',
            },
        ),
        migrations.CreateModel(
            name='MetaDataProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip', models.CharField(max_length=50)),
                ('schema_name', models.CharField(max_length=64)),
                ('routine_name', models.CharField(max_length=64)),
                ('routine_type', models.CharField(max_length=9)),
                ('content', models.TextField()),
                ('create_time', models.DateTimeField()),
                ('last_altered', models.DateTimeField()),
            ],
            options={
                'db_table': 'mysql_metadata_procedure',
            },
        ),
        migrations.CreateModel(
            name='MetaDataTables',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip', models.CharField(max_length=50)),
                ('table_schema', models.CharField(max_length=64)),
                ('table_name', models.CharField(max_length=64)),
                ('engine', models.CharField(max_length=64)),
                ('row_format', models.CharField(max_length=10)),
                ('table_rows', models.BigIntegerField()),
                ('avg_row_length', models.BigIntegerField()),
                ('max_data_length', models.BigIntegerField()),
                ('data_length', models.BigIntegerField()),
                ('index_length', models.BigIntegerField()),
                ('data_free', models.BigIntegerField()),
                ('chip_size', models.BigIntegerField()),
                ('auto_increment', models.BigIntegerField(default=0)),
                ('table_collation', models.CharField(max_length=32)),
                ('create_time', models.DateTimeField(null=True)),
                ('update_time', models.DateTimeField(null=True)),
                ('check_time', models.DateTimeField(null=True)),
                ('table_comment', models.CharField(max_length=500, null=True)),
            ],
            options={
                'db_table': 'mysql_metadata_tables',
            },
        ),
        migrations.CreateModel(
            name='Privileges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auth_obj', models.CharField(max_length=50)),
                ('select_host', models.SmallIntegerField()),
                ('update_host', models.SmallIntegerField()),
                ('insert_host', models.SmallIntegerField()),
                ('delete_host', models.SmallIntegerField()),
                ('select_user', models.SmallIntegerField()),
                ('update_user', models.SmallIntegerField()),
                ('delete_user', models.SmallIntegerField()),
                ('insert_user', models.SmallIntegerField()),
                ('pub_ince', models.SmallIntegerField()),
                ('audit_ince', models.SmallIntegerField()),
                ('select_data', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'auth_privileges',
            },
        ),
        migrations.CreateModel(
            name='RoleInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('comm', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_role_info',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_group_name', models.CharField(max_length=50, unique=True)),
                ('user_group_jd', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'auth_user_group',
            },
        ),
        migrations.CreateModel(
            name='UserGroupRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.UserGroup')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=50, unique=True)),
                ('user_pass', models.CharField(max_length=96)),
                ('email', models.EmailField(max_length=254)),
                ('lock_flag', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'db_table': 'auth_user_info',
            },
        ),
        migrations.CreateModel(
            name='UserRoleRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.RoleInfo')),
                ('user', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.UserInfo')),
            ],
        ),
        migrations.CreateModel(
            name='WorkOrderTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_ip', models.CharField(max_length=45)),
                ('db_name', models.CharField(default='test_db', max_length=50)),
                ('app_user', models.CharField(max_length=20)),
                ('app_pass', models.CharField(max_length=30)),
                ('app_port', models.SmallIntegerField(default=3306)),
                ('work_status', models.SmallIntegerField(default=10)),
                ('audit_status', models.SmallIntegerField(default=10)),
                ('work_order', models.OneToOneField(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.InceptionWorkOrderInfo', to_field='work_order_id')),
            ],
        ),
        migrations.AddField(
            model_name='usergrouprelationship',
            name='user',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.UserInfo'),
        ),
        migrations.AlterUniqueTogether(
            name='metadatatables',
            unique_together=set([('table_name', 'table_schema', 'host_ip')]),
        ),
        migrations.AlterIndexTogether(
            name='metadataprocedure',
            index_together=set([('routine_name', 'schema_name', 'host_ip')]),
        ),
        migrations.AlterIndexTogether(
            name='metadataindexs',
            index_together=set([('table_name', 'table_schema', 'host_ip')]),
        ),
        migrations.AlterIndexTogether(
            name='metadatacolumns',
            index_together=set([('table_name', 'table_schema', 'host_ip')]),
        ),
        migrations.AddField(
            model_name='inceptionworkorderinfo',
            name='review_user',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.UserInfo'),
        ),
        migrations.AddField(
            model_name='inceptionauditdetail',
            name='work_order',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.InceptionWorkOrderInfo', to_field='work_order_id'),
        ),
        migrations.AddField(
            model_name='inceauditsqlcontent',
            name='work_order',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.InceptionWorkOrderInfo', to_field='work_order_id'),
        ),
        migrations.AddField(
            model_name='hostappaccount',
            name='host',
            field=models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.CASCADE, to='model_model.HostInfo'),
        ),
        migrations.AlterIndexTogether(
            name='inceptionworkorderinfo',
            index_together=set([('work_user', 'review_status'), ('review_user', 'review_status')]),
        ),
    ]
